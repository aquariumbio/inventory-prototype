{"ast":null,"code":"import axiosInstance from './axiosInstance';\nconst API = {}; // getContainerTypes\n\nAPI.getContainerTypes = () => axiosInstance.get('container_types').then(response => response.data).catch(error => error); // getContainerType\n\n\nAPI.getContainerType = id => axiosInstance.get(`container_types/${id}`).then(response => response.data).catch(error => error); // addContainerType\n\n\nAPI.addContainerType = formData => axiosInstance.post('container_types/', {\n  container_type: formData\n}).then(response => response.data).catch(error => error);\n\nexport default API;","map":{"version":3,"sources":["/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/containerTypesAPI.js"],"names":["axiosInstance","API","getContainerTypes","get","then","response","data","catch","error","getContainerType","id","addContainerType","formData","post","container_type"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,GAAG,GAAG,EAAZ,C,CAEA;;AACAA,GAAG,CAACC,iBAAJ,GAAwB,MAAMF,aAAa,CACxCG,GAD2B,CACvB,iBADuB,EAE3BC,IAF2B,CAErBC,QAAD,IAAcA,QAAQ,CAACC,IAFD,EAG3BC,KAH2B,CAGpBC,KAAD,IAAWA,KAHU,CAA9B,C,CAKA;;;AACAP,GAAG,CAACQ,gBAAJ,GAAwBC,EAAD,IAAQV,aAAa,CACzCG,GAD4B,CACvB,mBAAkBO,EAAG,EADE,EAE5BN,IAF4B,CAEtBC,QAAD,IAAcA,QAAQ,CAACC,IAFA,EAG5BC,KAH4B,CAGrBC,KAAD,IAAWA,KAHW,CAA/B,C,CAKA;;;AACAP,GAAG,CAACU,gBAAJ,GAAwBC,QAAD,IAAcZ,aAAa,CAC/Ca,IADkC,CAC7B,kBAD6B,EACT;AACxBC,EAAAA,cAAc,EAAEF;AADQ,CADS,EAIlCR,IAJkC,CAI5BC,QAAD,IAAcA,QAAQ,CAACC,IAJM,EAKlCC,KALkC,CAK3BC,KAAD,IAAWA,KALiB,CAArC;;AAOA,eAAeP,GAAf","sourcesContent":["import axiosInstance from './axiosInstance';\n\nconst API = {};\n\n// getContainerTypes\nAPI.getContainerTypes = () => axiosInstance\n  .get('container_types')\n  .then((response) => response.data)\n  .catch((error) => error);\n\n// getContainerType\nAPI.getContainerType = (id) => axiosInstance\n  .get(`container_types/${id}`)\n  .then((response) => response.data)\n  .catch((error) => error);\n\n// addContainerType\nAPI.addContainerType = (formData) => axiosInstance\n  .post('container_types/', {\n    container_type: formData\n  })\n  .then((response) => response.data)\n  .catch((error) => error);\n\nexport default API;\n"]},"metadata":{},"sourceType":"module"}