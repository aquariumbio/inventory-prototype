{"ast":null,"code":"var _jsxFileName = \"/Users/gene/Aquarium_v3/aquarium_prototype/frontend/src/containerTypes/ContainerTypeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport containerTypesAPI from \"../api/containerTypesAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContainerTypeForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [containerType, setContainerType] = useState({\n    name: '',\n    description: '',\n    container_class: 'container',\n    container_type_id: 0,\n    composite_container_type_id: 0\n  });\n  const [containerTypes, setContainerTypes] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      // get container types and composite container types\n      const response = await containerTypesAPI.getContainerTypes();\n      if (!response) return; // success\n\n      setContainerTypes(response);\n    };\n\n    init();\n  }, []);\n\n  const handleChange = async event => {\n    setContainerType({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // get form data\n\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data); // add containerType\n\n    const response = await containerTypesAPI.addContainerType(formData);\n    if (!response) return; // form errors\n\n    if (response.errors) {\n      alert('Errors\\n- ' + response.errors.join('\\n- '));\n      return;\n    } // success\n\n\n    history.push('/containerTypes');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumbs\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/container_types\",\n        children: \"ContainerTypes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), \"New ContainerType\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"new\",\n      className: \"box width-400\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex box-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col-1\",\n          children: \"New ContainerType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plus-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex box-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col-1\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            value: containerType.name,\n            autoComplete: \"off\",\n            onChange: event => {\n              handleChange(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex box-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col-1\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"description\",\n            value: containerType.description,\n            autoComplete: \"off\",\n            onChange: event => {\n              handleChange(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex box-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col-1 center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleSubmit(event),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plus-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContainerTypeForm, \"hbRC5JP+bjKNo4SWQS4hi+H8zio=\", false, function () {\n  return [useHistory];\n});\n\n_c = ContainerTypeForm;\nexport default ContainerTypeForm; //         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Type\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <select name=\"container_class\" value={containerType.container_class} onChange={(event) => {handleChange(event)}}>\n//               <option value=\"container\">Container</option>\n//               <option value=\"composite_container\">Composite Container</option>\n//             </select>\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Container Type\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <select name=\"container_type_id\" value={containerType.container_type_id} onChange={(event) => {handleChange(event)}}>\n//               <option value=\"0\">Select... &nbsp;</option>\n//               {containerTypes.map((containerType) => (\n//                 <option value={containerType.id} key={containerType.id}>{containerType.name}</option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Composite Container Type\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <select name=\"composite_container_type_id\" value={containerType.composite_container_type_id} onChange={(event) => {handleChange(event)}}>\n//               <option value=\"0\">Select... &nbsp;</option>\n//               {compositeContainerTypes.map((containerType) => (\n//                 <option value={containerType.id} key={containerType.id}>{containerType.name}</option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             ContainerType\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <select name=\"containerType_id\" value={containerType.containerType_id} onChange={(event) => {handleChange(event)}}>\n//               <option value=\"0\">Select... &nbsp;</option>\n//               {containerTypes.map((containerType) => (\n//                 <option value={containerType.id} key={containerType.id}>{containerType.name}</option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Row\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <input name=\"containerType_row\" value={containerType.containerType_row} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Column\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <input name=\"containerType_column\" value={containerType.containerType_column} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n//           </div>\n//         </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainerTypeForm\");","map":{"version":3,"sources":["/Users/gene/Aquarium_v3/aquarium_prototype/frontend/src/containerTypes/ContainerTypeForm.jsx"],"names":["React","useState","useEffect","useHistory","itemsAPI","containerTypesAPI","ContainerTypeForm","history","containerType","setContainerType","name","description","container_class","container_type_id","composite_container_type_id","containerTypes","setContainerTypes","init","response","getContainerTypes","handleChange","event","target","value","handleSubmit","preventDefault","form","document","querySelector","data","FormData","formData","Object","fromEntries","addContainerType","errors","alert","join","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport containerTypesAPI from \"../api/containerTypesAPI\";\n\nconst ContainerTypeForm = () => {\n  const history = useHistory();\n\n  const [containerType, setContainerType] = useState({\n    name: '',\n    description: '',\n    container_class: 'container',\n    container_type_id: 0,\n    composite_container_type_id: 0\n  })\n  const [containerTypes, setContainerTypes] = useState([])\n\n  useEffect(() => {\n    const init = async () => {\n      // get container types and composite container types\n      const response = await containerTypesAPI.getContainerTypes();\n      if (!response) return;\n\n      // success\n      setContainerTypes(response);\n    };\n\n    init();\n  }, []);\n\n  const handleChange = async (event) => {\n    setContainerType({\n      [event.target.name]:event.target.value\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // get form data\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data);\n\n    // add containerType\n    const response = await containerTypesAPI.addContainerType(formData);\n    if (!response) return;\n\n    // form errors\n    if (response.errors) {\n      alert('Errors\\n- '+response.errors.join('\\n- '))\n      return;\n    }\n    // success\n    history.push('/containerTypes')\n  }\n\n  return (\n    <>\n      <div className='breadcrumbs'>\n        <a href=\"/container_types\">ContainerTypes</a>\n        <span>></span>\n        New ContainerType\n      </div>\n\n      <form name=\"new\" className=\"box width-400\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            New ContainerType\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"name\" value={containerType.name} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"description\" value={containerType.description} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1 center\">\n            <button onClick={(event) => handleSubmit(event)}>Submit</button>\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n      </form>\n    </>\n  );\n}\n\nexport default ContainerTypeForm;\n\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Type\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <select name=\"container_class\" value={containerType.container_class} onChange={(event) => {handleChange(event)}}>\n//               <option value=\"container\">Container</option>\n//               <option value=\"composite_container\">Composite Container</option>\n//             </select>\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Container Type\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <select name=\"container_type_id\" value={containerType.container_type_id} onChange={(event) => {handleChange(event)}}>\n//               <option value=\"0\">Select... &nbsp;</option>\n//               {containerTypes.map((containerType) => (\n//                 <option value={containerType.id} key={containerType.id}>{containerType.name}</option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Composite Container Type\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <select name=\"composite_container_type_id\" value={containerType.composite_container_type_id} onChange={(event) => {handleChange(event)}}>\n//               <option value=\"0\">Select... &nbsp;</option>\n//               {compositeContainerTypes.map((containerType) => (\n//                 <option value={containerType.id} key={containerType.id}>{containerType.name}</option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             ContainerType\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <select name=\"containerType_id\" value={containerType.containerType_id} onChange={(event) => {handleChange(event)}}>\n//               <option value=\"0\">Select... &nbsp;</option>\n//               {containerTypes.map((containerType) => (\n//                 <option value={containerType.id} key={containerType.id}>{containerType.name}</option>\n//               ))}\n//             </select>\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Row\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <input name=\"containerType_row\" value={containerType.containerType_row} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n//           </div>\n//         </div>\n//\n//         <div className=\"flex box-row\">\n//           <div className=\"flex-col-1\">\n//             Column\n//           </div>\n//           <div className=\"flex-col-2\">\n//             <input name=\"containerType_column\" value={containerType.containerType_column} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n//           </div>\n//         </div>\n\n"]},"metadata":{},"sourceType":"module"}