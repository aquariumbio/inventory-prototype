{"ast":null,"code":"import axiosInstance from './axiosInstance';\nconst API = {}; // getSampleTypes\n\nAPI.getSampleTypes = () => axiosInstance.get('sample_types').then(response => response.data).catch(error => error); // getSampleType\n\n\nAPI.getSampleType = id => axiosInstance.get(`sample_types/${id}`).then(response => response.data).catch(error => error); // addSampleType\n\n\nAPI.addSampleType = formData => axiosInstance.post('sample_types/', {\n  sample_type: formData\n}).then(response => response.data).catch(error => error);\n\nexport default API;","map":{"version":3,"sources":["/Users/gene/Aquarium_v3/aquarium_prototype/frontend/src/api/sampleTypesAPI.js"],"names":["axiosInstance","API","getSampleTypes","get","then","response","data","catch","error","getSampleType","id","addSampleType","formData","post","sample_type"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,GAAG,GAAG,EAAZ,C,CAEA;;AACAA,GAAG,CAACC,cAAJ,GAAqB,MAAMF,aAAa,CACrCG,GADwB,CACpB,cADoB,EAExBC,IAFwB,CAElBC,QAAD,IAAcA,QAAQ,CAACC,IAFJ,EAGxBC,KAHwB,CAGjBC,KAAD,IAAWA,KAHO,CAA3B,C,CAKA;;;AACAP,GAAG,CAACQ,aAAJ,GAAqBC,EAAD,IAAQV,aAAa,CACtCG,GADyB,CACpB,gBAAeO,EAAG,EADE,EAEzBN,IAFyB,CAEnBC,QAAD,IAAcA,QAAQ,CAACC,IAFH,EAGzBC,KAHyB,CAGlBC,KAAD,IAAWA,KAHQ,CAA5B,C,CAKA;;;AACAP,GAAG,CAACU,aAAJ,GAAqBC,QAAD,IAAcZ,aAAa,CAC5Ca,IAD+B,CAC1B,eAD0B,EACT;AACrBC,EAAAA,WAAW,EAAEF;AADQ,CADS,EAI/BR,IAJ+B,CAIzBC,QAAD,IAAcA,QAAQ,CAACC,IAJG,EAK/BC,KAL+B,CAKxBC,KAAD,IAAWA,KALc,CAAlC;;AAOA,eAAeP,GAAf","sourcesContent":["import axiosInstance from './axiosInstance';\n\nconst API = {};\n\n// getSampleTypes\nAPI.getSampleTypes = () => axiosInstance\n  .get('sample_types')\n  .then((response) => response.data)\n  .catch((error) => error);\n\n// getSampleType\nAPI.getSampleType = (id) => axiosInstance\n  .get(`sample_types/${id}`)\n  .then((response) => response.data)\n  .catch((error) => error);\n\n// addSampleType\nAPI.addSampleType = (formData) => axiosInstance\n  .post('sample_types/', {\n    sample_type: formData\n  })\n  .then((response) => response.data)\n  .catch((error) => error);\n\nexport default API;\n"]},"metadata":{},"sourceType":"module"}