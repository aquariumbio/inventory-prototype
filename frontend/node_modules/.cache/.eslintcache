[{"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/index.js":"1","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/reportWebVitals.js":"2","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/App.jsx":"3","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/shared/NavBar.jsx":"4","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypeCategories/SampleTypeCategoryForm.jsx":"5","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypeCategories/SampleTypeCategoryPage.jsx":"6","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypeCategories/SampleTypeCategoriesPage.jsx":"7","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/compositeSampleTypes/CompositeSampleTypesPage.jsx":"8","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/compositeSampleTypes/CompositeSampleTypeForm.jsx":"9","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/compositeSampleTypes/CompositeSampleTypePage.jsx":"10","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypes/SampleTypeForm.jsx":"11","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypes/SampleTypesPage.jsx":"12","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/locations/LocationForm.jsx":"13","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypes/SampleTypePage.jsx":"14","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/locations/LocationsPage.jsx":"15","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/locations/LocationPage.jsx":"16","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containers/ContainersPage.jsx":"17","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containers/ContainerForm.jsx":"18","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containerTypes/ContainerTypePage.jsx":"19","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containerTypes/ContainerTypeForm.jsx":"20","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containerTypes/ContainerTypesPage.jsx":"21","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containers/ContainerPage.jsx":"22","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/items/ItemsPage.jsx":"23","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/items/ItemForm.jsx":"24","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/items/ItemPage.jsx":"25","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/compositeSampleTypesAPI.js":"26","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/itemsAPI.js":"27","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/sampleTypesAPI.js":"28","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/containerTypesAPI.js":"29","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/sampleTypeCategoriesAPI.js":"30","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/locationsAPI.js":"31","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/containersAPI.js":"32","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/locations/_location.jsx":"33","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/compositeSampleTypes/_compositeSampleType.jsx":"34","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypes/_sampleType.jsx":"35","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypeCategories/_sampleTypeCategory.jsx":"36","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containers/_container.jsx":"37","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/items/_item.jsx":"38","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containerTypes/_containerType.jsx":"39","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/axiosInstance.js":"40"},{"size":500,"mtime":1621466966599,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1621466966600,"results":"43","hashOfConfig":"42"},{"size":3775,"mtime":1622130695843,"results":"44","hashOfConfig":"42"},{"size":751,"mtime":1622212979118,"results":"45","hashOfConfig":"42"},{"size":2755,"mtime":1622436015660,"results":"46","hashOfConfig":"42"},{"size":1849,"mtime":1622228161275,"results":"47","hashOfConfig":"42"},{"size":1465,"mtime":1622220361910,"results":"48","hashOfConfig":"42"},{"size":1490,"mtime":1622220688151,"results":"49","hashOfConfig":"42"},{"size":5695,"mtime":1622435653355,"results":"50","hashOfConfig":"42"},{"size":2798,"mtime":1622229494915,"results":"51","hashOfConfig":"42"},{"size":3821,"mtime":1622435988888,"results":"52","hashOfConfig":"42"},{"size":1285,"mtime":1622220470697,"results":"53","hashOfConfig":"42"},{"size":4944,"mtime":1622436178632,"results":"54","hashOfConfig":"42"},{"size":1888,"mtime":1622228175787,"results":"55","hashOfConfig":"42"},{"size":1243,"mtime":1622220731791,"results":"56","hashOfConfig":"42"},{"size":2061,"mtime":1622228092826,"results":"57","hashOfConfig":"42"},{"size":1267,"mtime":1622221162099,"results":"58","hashOfConfig":"42"},{"size":6227,"mtime":1622437008539,"results":"59","hashOfConfig":"42"},{"size":2591,"mtime":1622229870996,"results":"60","hashOfConfig":"42"},{"size":4161,"mtime":1622436962039,"results":"61","hashOfConfig":"42"},{"size":1351,"mtime":1622221072429,"results":"62","hashOfConfig":"42"},{"size":2724,"mtime":1622231497338,"results":"63","hashOfConfig":"42"},{"size":1233,"mtime":1622221969223,"results":"64","hashOfConfig":"42"},{"size":7622,"mtime":1622436753499,"results":"65","hashOfConfig":"42"},{"size":2879,"mtime":1622090886545,"results":"66","hashOfConfig":"42"},{"size":668,"mtime":1622092756929,"results":"67","hashOfConfig":"42"},{"size":510,"mtime":1621648158231,"results":"68","hashOfConfig":"42"},{"size":574,"mtime":1621956394466,"results":"69","hashOfConfig":"42"},{"size":604,"mtime":1621956585526,"results":"70","hashOfConfig":"42"},{"size":663,"mtime":1621916629901,"results":"71","hashOfConfig":"42"},{"size":550,"mtime":1621904596568,"results":"72","hashOfConfig":"42"},{"size":560,"mtime":1621904557554,"results":"73","hashOfConfig":"42"},{"size":518,"mtime":1622227960207,"results":"74","hashOfConfig":"42"},{"size":581,"mtime":1622220669299,"results":"75","hashOfConfig":"42"},{"size":485,"mtime":1622220446023,"results":"76","hashOfConfig":"42"},{"size":521,"mtime":1622220336504,"results":"77","hashOfConfig":"42"},{"size":511,"mtime":1622221005503,"results":"78","hashOfConfig":"42"},{"size":839,"mtime":1622222042222,"results":"79","hashOfConfig":"42"},{"size":519,"mtime":1622220768148,"results":"80","hashOfConfig":"42"},{"size":554,"mtime":1621611538424,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1q8fcz4",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/index.js",[],["178","179"],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/reportWebVitals.js",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/App.jsx",["180"],"import React from 'react';\nimport { BrowserRouter, Redirect, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport NavBar from './shared/NavBar'\n\nimport SampleTypeCategoriesPage from './sampleTypeCategories/SampleTypeCategoriesPage'\nimport SampleTypeCategoryForm from './sampleTypeCategories/SampleTypeCategoryForm'\nimport SampleTypeCategoryPage from './sampleTypeCategories/SampleTypeCategoryPage'\n\nimport CompositeSampleTypesPage from './compositeSampleTypes/CompositeSampleTypesPage'\nimport CompositeSampleTypeForm from './compositeSampleTypes/CompositeSampleTypeForm'\nimport CompositeSampleTypePage from './compositeSampleTypes/CompositeSampleTypePage'\n\nimport SampleTypesPage from './sampleTypes/SampleTypesPage'\nimport SampleTypeForm from './sampleTypes/SampleTypeForm'\nimport SampleTypePage from './sampleTypes/SampleTypePage'\n\nimport LocationsPage from './locations/LocationsPage'\nimport LocationForm from './locations/LocationForm'\nimport LocationPage from './locations/LocationPage'\n\nimport ContainerTypesPage from './containerTypes/ContainerTypesPage'\nimport ContainerTypeForm from './containerTypes/ContainerTypeForm'\nimport ContainerTypePage from './containerTypes/ContainerTypePage'\n\nimport ContainersPage from './containers/ContainersPage'\nimport ContainerForm from './containers/ContainerForm'\nimport ContainerPage from './containers/ContainerPage'\n\nimport ItemsPage from './items/ItemsPage'\nimport ItemForm from './items/ItemForm'\nimport ItemPage from './items/ItemPage'\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/sample_type_categories\" render={(props) => <SampleTypeCategoriesPage {...props} />} />\n        <Route exact path=\"/sample_type_categories/new\" render={(props) => <SampleTypeCategoryForm {...props} />} />\n        <Route exact path=\"/sample_type_categories/:id\" render={(props) => <SampleTypeCategoryPage {...props} />} />\n\n        <Route exact path=\"/composite_sample_types\" render={(props) => <CompositeSampleTypesPage {...props} />} />\n        <Route exact path=\"/composite_sample_types/new\" render={(props) => <CompositeSampleTypeForm {...props} />} />\n        <Route exact path=\"/composite_sample_types/:id\" render={(props) => <CompositeSampleTypePage {...props} />} />\n\n        <Route exact path=\"/sample_types\" render={(props) => <SampleTypesPage {...props} />} />\n        <Route exact path=\"/sample_types/new\" render={(props) => <SampleTypeForm {...props} />} />\n        <Route exact path=\"/sample_types/:id\" render={(props) => <SampleTypePage {...props} />} />\n\n        <Route exact path=\"/items\" render={(props) => <ItemsPage {...props} />} />\n        <Route exact path=\"/items/new\" render={(props) => <ItemForm {...props} />} />\n        <Route exact path=\"/items/:id\" render={(props) => <ItemPage {...props} />} />\n\n        <Route exact path=\"/locations\" render={(props) => <LocationsPage {...props} />} />\n        <Route exact path=\"/locations/new\" render={(props) => <LocationForm {...props} />} />\n        <Route exact path=\"/locations/:id\" render={(props) => <LocationPage {...props} />} />\n\n        <Route exact path=\"/container_types\" render={(props) => <ContainerTypesPage {...props} />} />\n        <Route exact path=\"/container_types/new\" render={(props) => <ContainerTypeForm {...props} />} />\n        <Route exact path=\"/container_types/:id\" render={(props) => <ContainerTypePage {...props} />} />\n\n        <Route exact path=\"/containers\" render={(props) => <ContainersPage {...props} />} />\n        <Route exact path=\"/containers/new\" render={(props) => <ContainerForm {...props} />} />\n        <Route exact path=\"/containers/:id\" render={(props) => <ContainerPage {...props} />} />\n\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/shared/NavBar.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypeCategories/SampleTypeCategoryForm.jsx",["181","182","183","184"],"import React, {useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport sampleTypesAPI from \"../api/sampleTypesAPI\";\nimport compositeSampleTypesAPI from \"../api/compositeSampleTypesAPI\";\nimport sampleTypeCategoriesAPI from \"../api/sampleTypeCategoriesAPI\";\n\nconst SampleTypeCategoryForm = () => {\n  const history = useHistory();\n\n  const [sampleTypeCategory, setSampleTypeCategory] = useState({\n    name: '',\n    description: '',\n    sample_class: 'sample',\n    sample_type_id: 0,\n    composite_sample_type_id: 0\n  })\n\n  const handleChange = async (event) => {\n    setSampleTypeCategory({...sampleTypeCategory,\n      [event.target.name]:event.target.value\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // get form data\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data);\n\n    // add sampleTypeCategory\n    const response = await sampleTypeCategoriesAPI.addSampleTypeCategory(formData);\n    if (!response) return;\n\n    // form errors\n    if (response.errors) {\n      alert('Errors\\n- '+response.errors.join('\\n- '))\n      return;\n    }\n    // success\n    history.push('/sample_type_categories')\n  }\n\n  return (\n    <>\n      <div className='breadcrumbs'>\n        <a href=\"/sample_type_categories\">SampleTypeCategories</a>\n        <span>></span>\n        New SampleTypeCategory\n      </div>\n\n      <form name=\"new\" className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            New SampleTypeCategory\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"name\" value={sampleTypeCategory.name} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"description\" value={sampleTypeCategory.description} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1 center\">\n            <button onClick={(event) => handleSubmit(event)}>Submit</button>\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n      </form>\n    </>\n  );\n}\n\nexport default SampleTypeCategoryForm;\n\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypeCategories/SampleTypeCategoryPage.jsx",["185","186"],"import React, {useState, useEffect} from 'react';\n\nimport '../App.css';\nimport sampleTypeCategoriesAPI from \"../api/sampleTypeCategoriesAPI\";\nimport SampleTypeCategory from \"./_sampleTypeCategory\";\n\nconst SampleTypeCategoryPage = ({match}) => {\n  // default members to empty array\n  const sampleTypeCategoryId = match.params.id\n  const [sampleTypeCategory, setSampleTypeCategory] = useState({});\n\n  useEffect(() => {\n    const init = async () => {\n      // get members\n      const response = await sampleTypeCategoriesAPI.getSampleTypeCategory(sampleTypeCategoryId);\n      if (!response) return;\n\n      // success\n      setSampleTypeCategory(response);\n    };\n\n    init();\n  }, []);\n\n  const editSampleTypeCategory = () => {\n    alert('TODO: Edit SampleTypeCategory')\n  }\n\n  return (\n    <>\n      <div class='breadcrumbs'>\n        <a href=\"/sample_type_categories\">SampleTypeCategories</a>\n        <span>></span>\n        {sampleTypeCategory.name}\n        <span>></span>\n        <button onClick={() => editSampleTypeCategory()}>Edit</button>\n      </div>\n\n      <div className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            {sampleTypeCategory.name}\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            {sampleTypeCategory.name}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            {sampleTypeCategory.description}\n          </div>\n        </div>\n\n        <div className=\"plus-8\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default SampleTypeCategoryPage;\n\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypeCategories/SampleTypeCategoriesPage.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/compositeSampleTypes/CompositeSampleTypesPage.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/compositeSampleTypes/CompositeSampleTypeForm.jsx",["187","188","189","190","191"],"import React, {useState, useEffect, useReducer} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport compositeSampleTypesAPI from \"../api/compositeSampleTypesAPI\";\nimport sampleTypesAPI from \"../api/sampleTypesAPI\";\n\n// traditional javascript variable\nvar x = 0\n\nconst CompositeSampleTypeForm = () => {\n  const history = useHistory();\n\n  const [compositeSampleType, setCompositeSampleType] = useState({\n    name: '',\n    description: '',\n    sample_class: 'sample',\n    sample_type_id: 0,\n    composite_sample_type_id: 0\n  })\n  const [compositeSampleTypes, setCompositeSampleTypes] = useState([])\n  const [sampleTypes, setSampleTypes] = useState([])\n  const [recipeList, setRecipeList] = useState([])\n  const [recipeSelects, setRecipeSelects] = useState({})\n  // const [x, setX] = useReducer(x => x + 1, 0);\n\n  useEffect(() => {\n    const init = async () => {\n      // get sample types and composite sample types\n      const response1 = await compositeSampleTypesAPI.getCompositeSampleTypes();\n      const response2 = await sampleTypesAPI.getSampleTypes();\n      if (!response1 || !response2) return;\n\n      // success\n      setCompositeSampleTypes(response1);\n      setSampleTypes(response2);\n    };\n\n    init();\n  }, []);\n\n  const handleChange = async (event) => {\n    setCompositeSampleType({...compositeSampleType,\n      [event.target.name]:event.target.value\n    })\n  }\n\n  const handleChangeById = async (event) => {\n    setRecipeSelects({\n      [event.target.id]:event.target.value\n    })\n  }\n\n  const handleAdd = async (event) => {\n    event.preventDefault();\n\n    // await setX() - would need to turn the result into a promise\n    x += 1\n    setRecipeList([...recipeList, x])\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // get form data\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data);\n\n    // add sampleTypes\n    let sample_type_ids = []\n    document.querySelectorAll('.sample_type_ids').forEach(function(sel) {\n      sample_type_ids.push(sel.options[sel.selectedIndex].value)\n    });\n    formData.sample_type_ids = sample_type_ids\n\n    // add compositeSampleType\n    const response = await compositeSampleTypesAPI.addCompositeSampleType(formData);\n    if (!response) return;\n\n    // form errors\n    if (response.errors) {\n      alert('Errors\\n- '+response.errors.join('\\n- '))\n      return;\n    }\n    // success\n    history.push('/composite_sample_types')\n  }\n\n  return (\n    <>\n      <div className='breadcrumbs'>\n        <a href=\"/composite_sample_types\">CompositeSampleTypes</a>\n        <span>></span>\n        New CompositeSampleType\n      </div>\n\n      <form name=\"new\" className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            New CompositeSampleType\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"name\" value={compositeSampleType.name} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"description\" value={compositeSampleType.description} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Fixed / Variable\n          </div>\n          <div className=\"flex-col-2\">\n            <select name=\"composite_sample_class\" value={compositeSampleType.composite_sample_class} onChange={(event) => {handleChange(event)}}>\n              <option value=\"0\">Select... &nbsp;</option>\n                <option value=\"fixed\">Fixed</option>\n                <option value=\"variable\">Variable</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        <div className={compositeSampleType.composite_sample_class == 'fixed' ? \"show\" : \"hide\" }>\n          {recipeList.map((recipe) => (\n            <div className=\"flex box-row\" id={`div_${recipe}`}>\n              <div className=\"flex-col-1\">\n                Sample Type {recipe}\n              </div>\n              <div className=\"flex-col-2\">\n                <select className=\"sample_type_ids\" id={`select_${recipe}`} onChange={(event) => {handleChangeById(event)}}>\n                  <option value=\"0\">Select... &nbsp;</option>\n                    {sampleTypes.map((sampleType) => (\n                      <option value={sampleType.id}>{sampleType.name}</option>\n                    ))}\n                  ))}\n                </select>\n              </div>\n            </div>\n          ))}\n\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n            </div>\n            <div className=\"flex-col-2\">\n              <button onClick={(event) => handleAdd(event)}>Add Sample Type</button>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1 center\">\n            <button onClick={(event) => handleSubmit(event)}>Submit</button>\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n      </form>\n    </>\n  );\n}\n\nexport default CompositeSampleTypeForm;\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/compositeSampleTypes/CompositeSampleTypePage.jsx",["192","193","194"],"import React, {useState, useEffect} from 'react';\n\nimport '../App.css';\nimport compositeSampleTypesAPI from \"../api/compositeSampleTypesAPI\";\nimport CompositeSampleType from \"./_compositeSampleType\";\n\nconst CompositeSampleTypePage = ({match}) => {\n  // default members to empty array\n  const compositeSampleTypeId = match.params.id\n  const [compositeSampleType, setCompositeSampleType] = useState({});\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    const init = async () => {\n      // get members\n      const response = await compositeSampleTypesAPI.getCompositeSampleType(compositeSampleTypeId);\n      if (!response) return;\n\n      // success\n      setCompositeSampleType(response.results);\n      setRecipes(response.recipes);\n    };\n\n    init();\n  }, []);\n\n  const editCompositeSampleType = () => {\n    alert('TODO: Edit CompositeSampleType')\n  }\n\n  return (\n    <>\n      <div class='breadcrumbs'>\n        <a href=\"/composite_sample_types\">CompositeSampleTypes</a>\n        <span>></span>\n        {compositeSampleType.name}\n        <span>></span>\n        <button onClick={() => editCompositeSampleType()}>Edit</button>\n      </div>\n\n      <div className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            {compositeSampleType.name}\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            {compositeSampleType.name}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            {compositeSampleType.description}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Class\n          </div>\n          <div className=\"flex-col-2\">\n            {compositeSampleType.composite_sample_class}\n          </div>\n        </div>\n\n        {compositeSampleType.composite_sample_class == 'fixed' ? (\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Recipe\n            </div>\n            <div className=\"flex-col-2\">\n            </div>\n          </div>\n        ) : (\n          <>\n          </>\n        )}\n\n\n        {recipes.map((recipe) => (\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Sample Type\n            </div>\n            <div className=\"flex-col-2\">\n              {recipe.name}\n            </div>\n          </div>\n        ))}\n\n        <div className=\"plus-8\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default CompositeSampleTypePage;\n\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypes/SampleTypeForm.jsx",["195","196","197"],"import React, {useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport sampleTypeCategoriesAPI from \"../api/sampleTypeCategoriesAPI\";\nimport compositeSampleTypesAPI from \"../api/compositeSampleTypesAPI\";\nimport sampleTypesAPI from \"../api/sampleTypesAPI\";\n\nconst SampleTypeForm = () => {\n  const history = useHistory();\n\n  const [sampleType, setSampleType] = useState({\n    name: '',\n    description: '',\n    sample_class: 'sample',\n    sample_type_id: 0,\n    composite_sample_type_id: 0\n  })\n  const [sampleTypeCategories, setSampleTypeCategories] = useState([])\n  const [sampleTypes, setSampleTypes] = useState([])\n\n  useEffect(() => {\n    const init = async () => {\n      // get sample types and composite sample types\n      const response1 = await sampleTypesAPI.getSampleTypes();\n      const response3 = await sampleTypeCategoriesAPI.getSampleTypeCategories();\n      if (!response1 || !response3 ) return;\n\n      // success\n      setSampleTypes(response1);\n      setSampleTypeCategories(response3);\n    };\n\n    init();\n  }, []);\n\n  const handleChange = async (event) => {\n    setSampleType({...sampleType,\n      [event.target.name]:event.target.value\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // get form data\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data);\n\n    // add sampleType\n    const response = await sampleTypesAPI.addSampleType(formData);\n    if (!response) return;\n\n    // form errors\n    if (response.errors) {\n      alert('Errors\\n- '+response.errors.join('\\n- '))\n      return;\n    }\n    // success\n    history.push('/sample_types')\n  }\n\n  return (\n    <>\n      <div className='breadcrumbs'>\n        <a href=\"/sampleTypes\">SampleTypes</a>\n        <span>></span>\n        New SampleType\n      </div>\n\n      <form name=\"new\" className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            New SampleType\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"name\" value={sampleType.name} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"description\" value={sampleType.description} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Sample Type Category\n          </div>\n          <div className=\"flex-col-2\">\n            <select name=\"sample_type_category_id\" value={sampleType.sample_type_category_id} onChange={(event) => {handleChange(event)}}>\n              <option value=\"0\">Select... &nbsp;</option>\n              {sampleTypeCategories.map((sampleTypeCategory) => (\n                <option value={sampleTypeCategory.id} key={sampleTypeCategory.id}>{sampleTypeCategory.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1 center\">\n            <button onClick={(event) => handleSubmit(event)}>Submit</button>\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n      </form>\n    </>\n  );\n}\n\nexport default SampleTypeForm;\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypes/SampleTypesPage.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/locations/LocationForm.jsx",["198","199","200","201"],"import React, {useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport sampleTypesAPI from \"../api/sampleTypesAPI\";\nimport compositeSampleTypesAPI from \"../api/compositeSampleTypesAPI\";\nimport locationsAPI from \"../api/locationsAPI\";\n\n// traditional javascript variable\nvar x = 0\n\nconst LocationForm = () => {\n  const history = useHistory();\n\n  const [location, setLocation] = useState({\n    name: '',\n    description: '',\n    sample_class: 'sample',\n    sample_type_id: 0,\n    composite_sample_type_id: 0\n  })\n  const [locations, setLocations] = useState([])\n  const [labelList, setLabelList] = useState([])\n  const [labelInputs, setLabelInputs] = useState({})\n  const [sizeInputs, setSizeInputs] = useState({})\n\n  useEffect(() => {\n    const init = async () => {\n      // get sample types and composite sample types\n      const response3 = await locationsAPI.getLocations();\n      if (!response3 ) return;\n\n      // success\n      setLocations(response3);\n    };\n\n    init();\n  }, []);\n\n  const handleChange = async (event) => {\n    setLocation({...location,\n      [event.target.name]:event.target.value\n    })\n  }\n\n  const handleAdd = async (event) => {\n    event.preventDefault();\n\n    // await setX() - would need to turn the result into a promise\n    x += 1\n    setLabelList([...labelList, x])\n  }\n\n  const handleLabelById = async (event) => {\n    setLabelInputs({...labelInputs,\n      [event.target.id]:event.target.value\n    })\n  }\n  \n  const handleSizeById = async (event) => {\n    setSizeInputs({...sizeInputs, \n      [event.target.id]:event.target.value\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // get form data\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data);\n\n    // add specification\n    let labels = []\n    let sizes = []\n    document.querySelectorAll('.labels').forEach(function(l) {\n      labels.push(l.value)\n    });\n    document.querySelectorAll('.sizes').forEach(function(s) {\n      sizes.push(s.value)\n    });\n    formData.labels = labels\n    formData.sizes = sizes\n\n    // add location\n    const response = await locationsAPI.addLocation(formData);\n    if (!response) return;\n\n\n    // form errors\n    if (response.errors) {\n      alert('Errors\\n- '+response.errors.join('\\n- '))\n      return;\n    }\n    // success\n    history.push('/locations')\n  }\n\n  return (\n    <>\n      <div className='breadcrumbs'>\n        <a href=\"/locations\">Locations</a>\n        <span>></span>\n        New Location\n      </div>\n\n      <form name=\"new\" className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            New Location\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"name\" value={location.name} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"description\" value={location.description} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Levels\n          </div>\n          <div className=\"flex-col-2\">\n          </div>\n        </div>\n        \n        {labelList.map((loc) => (\n          <div className=\"flex box-row\" id={`div_${loc}`}>\n            <div className=\"flex-col-1\">\n              &nbsp; &bull; Label / Size\n            </div>\n            <div className=\"flex-col-1\">\n              <input className=\"labels\" placeholder=\"Label\" id={`label_${loc}`} onChange={(event) => {handleLabelById(event)}} />\n            </div>\n            <div className=\"flex-col-1\">\n              <input className=\"sizes\" placeholder=\"1\" id={`size_${loc}`} onChange={(event) => {handleSizeById(event)}} />\n            </div>\n          </div>\n        ))}\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n          </div>\n          <div className=\"flex-col-2\">\n            <button onClick={(event) => handleAdd(event)}>Add Level</button>\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1 center\">\n            <button onClick={(event) => handleSubmit(event)}>Submit</button>\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n      </form>\n    </>\n  );\n}\nexport default LocationForm;\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypes/SampleTypePage.jsx",["202","203"],"import React, {useState, useEffect} from 'react';\n\nimport '../App.css';\nimport sampleTypesAPI from \"../api/sampleTypesAPI\";\nimport SampleType from \"./_sampleType\";\n\nconst SampleTypePage = ({match}) => {\n  // default members to empty array\n  const sampleTypeId = match.params.id\n  const [sampleType, setSampleType] = useState({});\n\n  useEffect(() => {\n    const init = async () => {\n      // get members\n      const response = await sampleTypesAPI.getSampleType(sampleTypeId);\n      if (!response) return;\n\n      // success\n      setSampleType(response);\n    };\n\n    init();\n  }, []);\n\n  const editSampleType = () => {\n    alert('TODO: Edit SampleType')\n  }\n\n  return (\n    <>\n      <div class='breadcrumbs'>\n        <a href=\"/sample_types\">SampleTypes</a>\n        <span>></span>\n        {sampleType.name}\n        <span>></span>\n        <button onClick={() => editSampleType()}>Edit</button>\n      </div>\n\n      <div className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            {sampleType.name}\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            {sampleType.name}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            {sampleType.description}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Category\n          </div>\n          <div className=\"flex-col-2\">\n            {sampleType.category}\n          </div>\n        </div>\n\n        <div className=\"plus-8\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default SampleTypePage;\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/locations/LocationsPage.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/locations/LocationPage.jsx",["204","205"],"import React, {useState, useEffect} from 'react';\n\nimport '../App.css';\nimport locationsAPI from \"../api/locationsAPI\";\nimport Location from \"./_location\";\n\nconst LocationPage = ({match}) => {\n  // default members to empty array\n  const locationId = match.params.id\n  const [location, setLocation] = useState({});\n\n  useEffect(() => {\n    const init = async () => {\n      // get members\n      const response = await locationsAPI.getLocation(locationId);\n      if (!response) return;\n\n      // success\n      setLocation(response);\n    };\n\n    init();\n  }, []);\n\n  const editLocation = () => {\n    alert('TODO: Edit Location')\n  }\n\n  return (\n    <>\n      <div class='breadcrumbs'>\n        <a href=\"/locations\">Locations</a>\n        <span>></span>\n        {location.name}\n        <span>></span>\n        <button onClick={() => editLocation()}>Edit</button>\n      </div>\n\n      <div className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            {location.name}\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            {location.name}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            {location.description}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Labels\n          </div>\n          <div className=\"flex-col-2\">\n            {location.spec_labels}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Sizes\n          </div>\n          <div className=\"flex-col-2\">\n            {location.spec_sizes}\n          </div>\n        </div>\n\n        <div className=\"plus-8\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default LocationPage;\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containers/ContainersPage.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containers/ContainerForm.jsx",["206","207","208"],"import React, {useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport containerTypesAPI from \"../api/containerTypesAPI\";\nimport locationsAPI from \"../api/locationsAPI\";\nimport containersAPI from \"../api/containersAPI\";\n\nconst ContainerForm = () => {\n  const history = useHistory();\n\n  const [container, setContainer] = useState({\n    name: '',\n    description: '',\n    sample_class: 'sample',\n    sample_type_id: 0,\n    composite_sample_type_id: 0,\n    location_id: 0\n  })\n  const [containerTypes, setContainerTypes] = useState([])\n  const [locations, setLocations] = useState([])\n  const [containers, setContainers] = useState([])\n  const [containerClass, setContainerClass] = useState('')\n  const [locationId, setLocationId] = useState(0)\n  const [locationSpec, setLocationSpec] = useState('')\n\n  useEffect(() => {\n    const init = async () => {\n      // get sample types and composite sample types\n      const response1 = await containerTypesAPI.getContainerTypes();\n      const response2 = await locationsAPI.getLocations();\n      const response3 = await containersAPI.getContainers();\n      if (!response1 || !response2 || !response3 ) return;\n\n      // success\n      setContainerTypes(response1);\n      setLocations(response2);\n      setContainers(response3);\n    };\n\n    init();\n  }, []);\n\n  const handleChange = async (event) => {\n    setContainer({...container,\n      [event.target.name]:event.target.value\n    })\n  }\n\n  const handleChangeContainer = async (event) => {\n    setContainer({...container,\n      [event.target.name]:event.target.value\n    })\n\n    const target = event.target\n    setContainerClass(target.options[target.selectedIndex].getAttribute(\"containerClass\"))\n  }\n\n  const handleChangeLocation = async (event) => {\n    setContainer({...container,\n      [event.target.name]:event.target.value\n    })\n\n    const target = event.target\n    setLocationId(target.options[target.selectedIndex].value)\n    setLocationSpec(target.options[target.selectedIndex].getAttribute(\"specification\"))\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // get form data\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data);\n\n    // add container\n    const response = await containersAPI.addContainer(formData);\n    if (!response) return;\n\n    // form errors\n    if (response.errors) {\n      alert('Errors\\n- '+response.errors.join('\\n- '))\n      return;\n    }\n    // success\n    history.push('/containers')\n  }\n\n  return (\n    <>\n      <div className='breadcrumbs'>\n        <a href=\"/containers\">Containers</a>\n        <span>></span>\n        New Container\n      </div>\n\n      <form name=\"new\" className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            New Container\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"name\" value={container.name} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"description\" value={container.description} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Container Type\n          </div>\n          <div className=\"flex-col-2\">\n            <select name=\"container_type_id\" value={container.container_type_id} onChange={(event) => {handleChangeContainer(event)}}>\n              <option value=\"0\">Select... &nbsp;</option>\n              {containerTypes.map((containerType) => (\n                <option value={containerType.id} containerClass={containerType.container_class} key={containerType.id}>{containerType.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Container Class\n          </div>\n          <div className=\"flex-col-2\">\n            {containerClass || \"-\"}\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Location\n          </div>\n          <div className=\"flex-col-2\">\n            <select name=\"location_id\" value={container.location_id} onChange={(event) => {handleChangeLocation(event)}}>\n              <option value=\"0\">&lt;None></option>\n              {locations.map((location) => (\n                <option value={location.id} specification={`${location.spec_labels} ( ${location.spec_sizes} )`} key={location.id}>{location.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className={locationId == 0 ? \"hide\" : \"show\" }>\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Location Spec\n            </div>\n            <div className=\"flex-col-2\">\n              {locationSpec || \"-\"}\n            </div>\n          </div>\n\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Location Detail\n            </div>\n            <div className=\"flex-col-2\">\n              <input name=\"location\" value={container.location} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n            </div>\n          </div>\n        </div>\n        \n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1 center\">\n            <button onClick={(event) => handleSubmit(event)}>Submit</button>\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n      </form>\n    </>\n  );\n}\n\nexport default ContainerForm;\n\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containerTypes/ContainerTypePage.jsx",["209","210","211"],"import React, {useState, useEffect} from 'react';\n\nimport '../App.css';\nimport containerTypesAPI from \"../api/containerTypesAPI\";\nimport ContainerType from \"./_containerType\";\n\nconst ContainerTypePage = ({match}) => {\n  // default members to empty array\n  const containerTypeId = match.params.id\n  const [containerType, setContainerType] = useState({});\n\n  useEffect(() => {\n    const init = async () => {\n      // get members\n      const response = await containerTypesAPI.getContainerType(containerTypeId);\n      if (!response) return;\n\n      // success\n      setContainerType(response);\n    };\n\n    init();\n  }, []);\n\n  const editContainerType = () => {\n    alert('TODO: Edit ContainerType')\n  }\n\n  return (\n    <>\n      <div class='breadcrumbs'>\n        <a href=\"/container_types\">ContainerTypes</a>\n        <span>></span>\n        {containerType.name}\n        <span>></span>\n        <button onClick={() => editContainerType()}>Edit</button>\n      </div>\n\n      <div className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            {containerType.name}\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            {containerType.name}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            {containerType.description}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Class\n          </div>\n          <div className=\"flex-col-2\">\n            {containerType.container_class}\n          </div>\n        </div>\n\n        {containerType.container_class == 'collection' ? (\n          <>\n            <div className=\"flex box-row\">\n              <div className=\"flex-col-1\">\n                Rows\n              </div>\n              <div className=\"flex-col-2\">\n                {containerType.rows}\n              </div>\n            </div>\n            <div className=\"flex box-row\">\n              <div className=\"flex-col-1\">\n                Columns\n              </div>\n              <div className=\"flex-col-2\">\n                {containerType.columns}\n              </div>\n            </div>\n          </>\n        ) : (\n          <></>\n        )}\n\n        <div className=\"plus-8\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default ContainerTypePage;\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containerTypes/ContainerTypeForm.jsx",["212","213","214"],"import React, {useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport containerTypesAPI from \"../api/containerTypesAPI\";\n\nconst ContainerTypeForm = () => {\n  const history = useHistory();\n\n  const [containerType, setContainerType] = useState({\n    name: '',\n    description: '',\n    container_class: 'container',\n    container_type_id: 0,\n    composite_container_type_id: 0\n  })\n\n  const handleChange = async (event) => {\n    setContainerType({...containerType,\n      [event.target.name]:event.target.value\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // get form data\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data);\n\n    // add containerType\n    const response = await containerTypesAPI.addContainerType(formData);\n    if (!response) return;\n\n    // form errors\n    if (response.errors) {\n      alert('Errors\\n- '+response.errors.join('\\n- '))\n      return;\n    }\n    // success\n    history.push('/container_types')\n  }\n\n  return (\n    <>\n      <div className='breadcrumbs'>\n        <a href=\"/container_types\">ContainerTypes</a>\n        <span>></span>\n        New ContainerType\n      </div>\n\n      <form name=\"new\" className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            New ContainerType\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"name\" value={containerType.name} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"description\" value={containerType.description} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Max Volume\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"max_volume\" value={containerType.max_volume} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Single / Collection\n          </div>\n          <div className=\"flex-col-2\">\n            <select name=\"container_class\" value={containerType.container_class} onChange={(event) => {handleChange(event)}}>\n              <option value=\"single\">Single</option>\n              <option value=\"collection\">Collection</option>\n            </select>\n          </div>\n        </div>\n\n        <div className={containerType.container_class == 'collection' ? \"show\" : \"hide\" }>\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Rows\n            </div>\n            <div className=\"flex-col-2\">\n              <input name=\"rows\" value={containerType.rows} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n            </div>\n          </div>\n\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Columns\n            </div>\n            <div className=\"flex-col-2\">\n              <input name=\"columns\" value={containerType.columns} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n            </div>\n          </div>\n        </div>\n        \n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1 center\">\n            <button onClick={(event) => handleSubmit(event)}>Submit</button>\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n      </form>\n    </>\n  );\n}\n\nexport default ContainerTypeForm;\n\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containerTypes/ContainerTypesPage.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containers/ContainerPage.jsx",["215","216","217"],"import React, {useState, useEffect} from 'react';\n\nimport '../App.css';\nimport containersAPI from \"../api/containersAPI\";\nimport Container from \"./_container\";\n\nconst ContainerPage = ({match}) => {\n  // default members to empty array\n  const containerId = match.params.id\n  const [container, setContainer] = useState({});\n\n  useEffect(() => {\n    const init = async () => {\n      // get members\n      const response = await containersAPI.getContainer(containerId);\n      if (!response) return;\n\n      // success\n      setContainer(response);\n    };\n\n    init();\n  }, []);\n\n  const editContainer = () => {\n    alert('TODO: Edit Container')\n  }\n\n  return (\n    <>\n      <div class='breadcrumbs'>\n        <a href=\"/containers\">Containers</a>\n        <span>></span>\n        {container.name}\n        <span>></span>\n        <button onClick={() => editContainer()}>Edit</button>\n      </div>\n\n      <div className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            {container.name}\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            {container.name}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            {container.description}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Container Type\n          </div>\n          <div className=\"flex-col-2\">\n            {container.container_name} ( {container.container_class} )\n          </div>\n        </div>\n\n        {container.container_class == 'collection' ? (\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Row / column\n            </div>\n            <div className=\"flex-col-2\">\n              {container.row} / {container.column}\n            </div>\n          </div>\n        ) : (\n          <>\n          </>\n        )}\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Location Name\n          </div>\n          <div className=\"flex-col-2\">\n            {container.location_name}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Location\n          </div>\n          <div className=\"flex-col-2\">\n            {container.location}\n          </div>\n        </div>\n\n        <div className=\"plus-8\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default ContainerPage;\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/items/ItemsPage.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/items/ItemForm.jsx",["218","219"],"import React, {useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport sampleTypesAPI from \"../api/sampleTypesAPI\";\nimport compositeSampleTypesAPI from \"../api/compositeSampleTypesAPI\";\nimport containersAPI from \"../api/containersAPI\";\n\nconst ItemForm = () => {\n  const history = useHistory();\n\n  const [item, setItem] = useState({\n    sample_class: 'sample'\n  })\n  const [sampleTypes, setSampleTypes] = useState([])\n  const [compositeSampleTypes, setCompositeSampleTypes] = useState([])\n  const [containers, setContainers] = useState([])\n\n//   const [sampleClass, setSampleClass] = useState('sample')\n  const [containerClass, setContainerClass] = useState('')\n  const [compositeClass, setCompositeClass] = useState('')\n\n  useEffect(() => {\n    const init = async () => {\n      // get sample types and composite sample types\n      const response1 = await sampleTypesAPI.getSampleTypes();\n      const response2 = await compositeSampleTypesAPI.getCompositeSampleTypes();\n      const response3 = await containersAPI.getContainers();\n      if (!response1 || !response2 || !response3 ) return;\n\n      // success\n      setSampleTypes(response1);\n      setCompositeSampleTypes(response2);\n      setContainers(response3);\n    };\n\n    init();\n  }, []);\n\n  const handleChange = async (event) => {\n    setItem({...item,\n      [event.target.name]:event.target.value\n    })\n  }\n\n  const handleChangeContainer = async (event) => {\n    setItem({...item,\n      [event.target.name]:event.target.value\n    })\n\n    const target = event.target\n    setContainerClass(target.options[target.selectedIndex].getAttribute(\"containerClass\"))\n  }\n\n  const handleChangeComposite = async (event) => {\n    setItem({...item,\n      [event.target.name]:event.target.value\n    })\n\n    const target = event.target\n    setCompositeClass(target.options[target.selectedIndex].getAttribute(\"compositeClass\"))\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    // get form data\n    const form = document.querySelector('form[name=\"new\"]');\n    const data = new FormData(form);\n    const formData = Object.fromEntries(data);\n\n    // add item\n    const response = await itemsAPI.addItem(formData);\n    if (!response) return;\n\n    // form errors\n    if (response.errors) {\n      alert('Errors\\n- '+response.errors.join('\\n- '))\n      return;\n    }\n    // success\n    history.push('/items')\n  }\n\n  return (\n    <>\n      <div className='breadcrumbs'>\n        <a href=\"/items\">Items</a>\n        <span>></span>\n        New Item\n      </div>\n\n      <form name=\"new\" className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            New Item\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"name\" value={item.name} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            <input name=\"description\" value={item.description} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n          </div>\n        </div>\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Sample Class\n          </div>\n          <div className=\"flex-col-2\">\n            <select name=\"sample_class\" value={item.sample_class} onChange={(event) => {handleChange(event)}}>\n              <option value=\"sample\">Sample</option>\n              <option value=\"composite_sample\">Composite Sample</option>\n            </select>\n          </div>\n        </div>\n\n        {item.sample_class == 'sample' ? (\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Sample Type\n            </div>\n            <div className=\"flex-col-2\">\n              <select name=\"sample_type_id\" value={item.sample_type_id} onChange={(event) => {handleChange(event)}}>\n                <option value=\"0\">Select... &nbsp;</option>\n                {sampleTypes.map((sampleType) => (\n                  <option value={sampleType.id} key={sampleType.id}>{sampleType.name}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"flex box-row\">\n              <div className=\"flex-col-1\">\n                Composite Sample Type\n              </div>\n              <div className=\"flex-col-2\">\n                <select name=\"composite_sample_type_id\" value={item.composite_sample_type_id} onChange={(event) => {handleChangeComposite(event)}}>\n                  <option value=\"0\">Select... &nbsp;</option>\n                  {compositeSampleTypes.map((compositeSampleType) => (\n                    <option value={compositeSampleType.id} compositeClass={compositeSampleType.composite_sample_class} key={compositeSampleType.id}>{compositeSampleType.name}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"flex box-row\">\n              <div className=\"flex-col-1\">\n                Composite Sample Class\n              </div>\n              <div className=\"flex-col-2\">\n                {compositeClass || '-'}\n              </div>\n            </div>\n          </>\n        )}\n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Container\n          </div>\n          <div className=\"flex-col-2\">\n            <select name=\"container_id\" value={item.container_id} onChange={(event) => {handleChangeContainer(event)}}>\n              <option value=\"0\">Select... &nbsp;</option>\n              {containers.map((container) => (\n                <option value={container.id} containerClass={container.container_class} key={container.id}>{container.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Container Class\n          </div>\n          <div className=\"flex-col-2\">\n            {containerClass || \"-\"}\n          </div>\n        </div>\n\n        <div className={containerClass == 'collection' ? \"show\" : \"hide\" }>\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Row\n            </div>\n            <div className=\"flex-col-2\">\n              <input name=\"container_row\" value={item.container_row} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n            </div>\n          </div>\n\n          <div className=\"flex box-row\">\n            <div className=\"flex-col-1\">\n              Column\n            </div>\n            <div className=\"flex-col-2\">\n              <input name=\"container_column\" value={item.container_column} autoComplete = \"off\" onChange={(event) => {handleChange(event)}} />\n            </div>\n          </div>\n        </div>\n        \n        \n        <div className=\"divider\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1 center\">\n            <button onClick={(event) => handleSubmit(event)}>Submit</button>\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n      </form>\n    </>\n  );\n}\n\nexport default ItemForm;\n\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/items/ItemPage.jsx",["220","221"],"import React, {useState, useEffect} from 'react';\n\nimport '../App.css';\nimport itemsAPI from \"../api/itemsAPI\";\nimport Item from \"./_item\";\n\nconst ItemPage = ({match}) => {\n  // default members to empty array\n  const itemId = match.params.id\n  const [item, setItem] = useState({});\n\n  useEffect(() => {\n    const init = async () => {\n      // get members\n      const response = await itemsAPI.getItem(itemId);\n      if (!response) return;\n\n      // success\n      setItem(response);\n    };\n\n    init();\n  }, []);\n\n  const editItem = () => {\n    alert('TODO: Edit Item')\n  }\n\n  return (\n    <>\n      <div class='breadcrumbs'>\n        <a href=\"/items\">Items</a>\n        <span>></span>\n        {item.name}\n        <span>></span>\n        <button onClick={() => editItem()}>Edit</button>\n      </div>\n\n      <div className=\"box width-box\">\n        <div className=\"flex box-title\">\n          <div className=\"flex-col-1\">\n            {item.name}\n          </div>\n        </div>\n        <div className=\"plus-8\"></div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Name\n          </div>\n          <div className=\"flex-col-2\">\n            {item.name}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Description\n          </div>\n          <div className=\"flex-col-2\">\n            {item.description}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Type\n          </div>\n          <div className=\"flex-col-2\">\n            {item.sample_class}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Sample Type\n          </div>\n          <div className=\"flex-col-2\">\n            {item.sample_type_id}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Composite Sample Type\n          </div>\n          <div className=\"flex-col-2\">\n            {item.composite_sample_type_id}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Container\n          </div>\n          <div className=\"flex-col-2\">\n            {item.container_id}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Row\n          </div>\n          <div className=\"flex-col-2\">\n            {item.container_row}\n          </div>\n        </div>\n\n        <div className=\"flex box-row\">\n          <div className=\"flex-col-1\">\n            Column\n          </div>\n          <div className=\"flex-col-2\">\n            {item.container_column}\n          </div>\n        </div>\n\n        <div className=\"plus-8\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default ItemPage;\n\n","/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/compositeSampleTypesAPI.js",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/itemsAPI.js",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/sampleTypesAPI.js",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/containerTypesAPI.js",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/sampleTypeCategoriesAPI.js",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/locationsAPI.js",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/containersAPI.js",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/locations/_location.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/compositeSampleTypes/_compositeSampleType.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypes/_sampleType.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/sampleTypeCategories/_sampleTypeCategory.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containers/_container.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/items/_item.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/containerTypes/_containerType.jsx",[],"/Users/gene/Aquarium_prototype/aquarium_prototype/frontend/src/api/axiosInstance.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":2,"column":25,"nodeType":"228","messageId":"229","endLine":2,"endColumn":33},{"ruleId":"226","severity":1,"message":"230","line":1,"column":26,"nodeType":"228","messageId":"229","endLine":1,"endColumn":35},{"ruleId":"226","severity":1,"message":"231","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":16},{"ruleId":"226","severity":1,"message":"232","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":22},{"ruleId":"226","severity":1,"message":"233","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":31},{"ruleId":"226","severity":1,"message":"234","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":26},{"ruleId":"235","severity":1,"message":"236","line":23,"column":6,"nodeType":"237","endLine":23,"endColumn":8,"suggestions":"238"},{"ruleId":"226","severity":1,"message":"239","line":1,"column":37,"nodeType":"228","messageId":"229","endLine":1,"endColumn":47},{"ruleId":"226","severity":1,"message":"231","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":16},{"ruleId":"226","severity":1,"message":"240","line":22,"column":10,"nodeType":"228","messageId":"229","endLine":22,"endColumn":30},{"ruleId":"226","severity":1,"message":"241","line":25,"column":10,"nodeType":"228","messageId":"229","endLine":25,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":141,"column":68,"nodeType":"244","messageId":"245","endLine":141,"endColumn":70},{"ruleId":"226","severity":1,"message":"246","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":27},{"ruleId":"235","severity":1,"message":"247","line":25,"column":6,"nodeType":"237","endLine":25,"endColumn":8,"suggestions":"248"},{"ruleId":"242","severity":1,"message":"243","line":76,"column":53,"nodeType":"244","messageId":"245","endLine":76,"endColumn":55},{"ruleId":"226","severity":1,"message":"231","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":16},{"ruleId":"226","severity":1,"message":"233","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":31},{"ruleId":"226","severity":1,"message":"249","line":21,"column":10,"nodeType":"228","messageId":"229","endLine":21,"endColumn":21},{"ruleId":"226","severity":1,"message":"231","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":16},{"ruleId":"226","severity":1,"message":"232","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":22},{"ruleId":"226","severity":1,"message":"233","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":31},{"ruleId":"226","severity":1,"message":"250","line":23,"column":10,"nodeType":"228","messageId":"229","endLine":23,"endColumn":19},{"ruleId":"226","severity":1,"message":"251","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":18},{"ruleId":"235","severity":1,"message":"252","line":23,"column":6,"nodeType":"237","endLine":23,"endColumn":8,"suggestions":"253"},{"ruleId":"226","severity":1,"message":"254","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":16},{"ruleId":"235","severity":1,"message":"255","line":23,"column":6,"nodeType":"237","endLine":23,"endColumn":8,"suggestions":"256"},{"ruleId":"226","severity":1,"message":"231","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":16},{"ruleId":"226","severity":1,"message":"257","line":23,"column":10,"nodeType":"228","messageId":"229","endLine":23,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":166,"column":36,"nodeType":"244","messageId":"245","endLine":166,"endColumn":38},{"ruleId":"226","severity":1,"message":"258","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":21},{"ruleId":"235","severity":1,"message":"259","line":23,"column":6,"nodeType":"237","endLine":23,"endColumn":8,"suggestions":"260"},{"ruleId":"242","severity":1,"message":"243","line":74,"column":40,"nodeType":"244","messageId":"245","endLine":74,"endColumn":42},{"ruleId":"226","severity":1,"message":"230","line":1,"column":26,"nodeType":"228","messageId":"229","endLine":1,"endColumn":35},{"ruleId":"226","severity":1,"message":"231","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":103,"column":55,"nodeType":"244","messageId":"245","endLine":103,"endColumn":57},{"ruleId":"226","severity":1,"message":"261","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":17},{"ruleId":"235","severity":1,"message":"262","line":23,"column":6,"nodeType":"237","endLine":23,"endColumn":8,"suggestions":"263"},{"ruleId":"242","severity":1,"message":"243","line":74,"column":36,"nodeType":"244","messageId":"245","endLine":74,"endColumn":38},{"ruleId":"242","severity":1,"message":"243","line":134,"column":28,"nodeType":"244","messageId":"245","endLine":134,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":200,"column":40,"nodeType":"244","messageId":"245","endLine":200,"endColumn":42},{"ruleId":"226","severity":1,"message":"264","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":12},{"ruleId":"235","severity":1,"message":"265","line":23,"column":6,"nodeType":"237","endLine":23,"endColumn":8,"suggestions":"266"},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'itemsAPI' is defined but never used.","'sampleTypesAPI' is defined but never used.","'compositeSampleTypesAPI' is defined but never used.","'SampleTypeCategory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sampleTypeCategoryId'. Either include it or remove the dependency array.","ArrayExpression",["269"],"'useReducer' is defined but never used.","'compositeSampleTypes' is assigned a value but never used.","'recipeSelects' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CompositeSampleType' is defined but never used.","React Hook useEffect has a missing dependency: 'compositeSampleTypeId'. Either include it or remove the dependency array.",["270"],"'sampleTypes' is assigned a value but never used.","'locations' is assigned a value but never used.","'SampleType' is defined but never used.","React Hook useEffect has a missing dependency: 'sampleTypeId'. Either include it or remove the dependency array.",["271"],"'Location' is defined but never used.","React Hook useEffect has a missing dependency: 'locationId'. Either include it or remove the dependency array.",["272"],"'containers' is assigned a value but never used.","'ContainerType' is defined but never used.","React Hook useEffect has a missing dependency: 'containerTypeId'. Either include it or remove the dependency array.",["273"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'containerId'. Either include it or remove the dependency array.",["274"],"'Item' is defined but never used.","React Hook useEffect has a missing dependency: 'itemId'. Either include it or remove the dependency array.",["275"],"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [sampleTypeCategoryId]",{"range":"290","text":"291"},"Update the dependencies array to be: [compositeSampleTypeId]",{"range":"292","text":"293"},"Update the dependencies array to be: [sampleTypeId]",{"range":"294","text":"295"},"Update the dependencies array to be: [locationId]",{"range":"296","text":"297"},"Update the dependencies array to be: [containerTypeId]",{"range":"298","text":"299"},"Update the dependencies array to be: [containerId]",{"range":"300","text":"301"},"Update the dependencies array to be: [itemId]",{"range":"302","text":"303"},[678,680],"[sampleTypeCategoryId]",[777,779],"[compositeSampleTypeId]",[579,581],"[sampleTypeId]",[555,557],"[locationId]",[615,617],"[containerTypeId]",[567,569],"[containerId]",[507,509],"[itemId]"]